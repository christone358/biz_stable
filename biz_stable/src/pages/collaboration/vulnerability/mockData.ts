import type {
  VulnerabilityDisposalRecord,
  DisposalMetrics,
  VulnerabilityLevel,
  DisposalStatus,
  ProcessingMethod
} from './types'

// 生成脆弱性处置记录
export const generateDisposalRecords = (): VulnerabilityDisposalRecord[] => {
  const vulnerabilities = [
    {
      name: 'Apache Log4j2 远程代码执行漏洞',
      cveNumber: 'CVE-2021-44228',
      level: 'high' as VulnerabilityLevel,
      cvssScore: 10.0,
      description: 'Apache Log4j2存在JNDI注入漏洞,当程序记录包含特殊格式的字符串时,会触发远程代码执行。攻击者可利用该漏洞在目标服务器上执行任意代码。',
      affectedScope: '影响使用Apache Log4j2 2.0-2.14.1版本的所有应用系统',
      fixSuggestion: '1. 升级到2.15.0或更高版本\n2. 临时解决方案:移除JndiLookup类'
    },
    {
      name: 'Nginx 权限绕过漏洞',
      cveNumber: 'CVE-2021-23017',
      level: 'medium' as VulnerabilityLevel,
      cvssScore: 7.7,
      description: 'Nginx在处理DNS解析时存在off-by-one缓冲区溢出漏洞,可能导致权限绕过。',
      affectedScope: '影响Nginx 0.6.18到1.20.0版本',
      fixSuggestion: '升级到Nginx 1.20.1或更高版本'
    },
    {
      name: 'OpenSSL 信息泄露漏洞',
      cveNumber: 'CVE-2022-0778',
      level: 'low' as VulnerabilityLevel,
      cvssScore: 5.3,
      description: 'OpenSSL在解析特定格式的证书时可能触发无限循环,导致拒绝服务。',
      affectedScope: '影响OpenSSL 1.0.2到3.0.1版本',
      fixSuggestion: '升级到OpenSSL 3.0.2或更高版本'
    },
    {
      name: 'MySQL 权限提升漏洞',
      cveNumber: 'CVE-2022-21449',
      level: 'high' as VulnerabilityLevel,
      cvssScore: 8.8,
      description: 'MySQL在处理用户权限时存在逻辑错误,普通用户可能提升为管理员权限。',
      affectedScope: '影响MySQL 8.0.28及以下版本',
      fixSuggestion: '升级到MySQL 8.0.29或更高版本'
    },
    {
      name: 'Redis 未授权访问漏洞',
      cveNumber: 'CVE-2022-24735',
      level: 'high' as VulnerabilityLevel,
      cvssScore: 9.1,
      description: 'Redis在默认配置下未启用认证,可能导致未授权访问和数据泄露。',
      affectedScope: '影响所有未正确配置认证的Redis实例',
      fixSuggestion: '1. 启用requirepass认证\n2. 绑定到内网IP\n3. 配置防火墙规则'
    },
    {
      name: 'Spring Framework远程代码执行漏洞',
      cveNumber: 'CVE-2022-22965',
      level: 'high' as VulnerabilityLevel,
      cvssScore: 9.8,
      description: 'Spring Framework在特定条件下存在远程代码执行漏洞,攻击者可通过构造特殊请求执行任意代码。',
      affectedScope: '影响Spring Framework 5.3.0到5.3.17版本',
      fixSuggestion: '升级到Spring Framework 5.3.18或更高版本'
    },
    {
      name: 'PostgreSQL 权限绕过漏洞',
      cveNumber: 'CVE-2022-1552',
      level: 'medium' as VulnerabilityLevel,
      cvssScore: 6.5,
      description: 'PostgreSQL在处理扩展脚本时存在权限检查不足,可能导致权限绕过。',
      affectedScope: '影响PostgreSQL 14.0到14.2版本',
      fixSuggestion: '升级到PostgreSQL 14.3或更高版本'
    },
    {
      name: 'Tomcat 信息泄露漏洞',
      cveNumber: 'CVE-2022-29885',
      level: 'low' as VulnerabilityLevel,
      cvssScore: 4.3,
      description: 'Tomcat在处理特定请求时可能泄露敏感信息。',
      affectedScope: '影响Tomcat 9.0.0.M1到9.0.62版本',
      fixSuggestion: '升级到Tomcat 9.0.63或更高版本'
    },
    {
      name: 'Docker 容器逃逸漏洞',
      cveNumber: 'CVE-2022-23648',
      level: 'high' as VulnerabilityLevel,
      cvssScore: 8.6,
      description: 'Docker在处理某些特殊配置时可能导致容器逃逸,攻击者可获取宿主机访问权限。',
      affectedScope: '影响Docker 20.10.0到20.10.13版本',
      fixSuggestion: '升级到Docker 20.10.14或更高版本'
    },
    {
      name: 'Kubernetes 权限提升漏洞',
      cveNumber: 'CVE-2022-3172',
      level: 'medium' as VulnerabilityLevel,
      cvssScore: 7.2,
      description: 'Kubernetes API Server在处理聚合API时存在权限检查不足。',
      affectedScope: '影响Kubernetes 1.24.0到1.24.3版本',
      fixSuggestion: '升级到Kubernetes 1.24.4或更高版本'
    },
    {
      name: 'Jenkins 任意文件读取漏洞',
      cveNumber: 'CVE-2022-34177',
      level: 'medium' as VulnerabilityLevel,
      cvssScore: 6.8,
      description: 'Jenkins在处理文件路径时存在路径遍历漏洞,可能导致任意文件读取。',
      affectedScope: '影响Jenkins 2.355及以下版本',
      fixSuggestion: '升级到Jenkins 2.356或更高版本'
    },
    {
      name: 'Elasticsearch 拒绝服务漏洞',
      cveNumber: 'CVE-2022-23712',
      level: 'low' as VulnerabilityLevel,
      cvssScore: 5.5,
      description: 'Elasticsearch在处理特定查询时可能导致内存耗尽。',
      affectedScope: '影响Elasticsearch 7.0.0到7.17.2版本',
      fixSuggestion: '升级到Elasticsearch 7.17.3或更高版本'
    }
  ]

  const assets = [
    { name: 'ecs-prod-web-01', ip: '192.168.1.101', type: '云服务器', os: 'Linux - CentOS 7.9' },
    { name: 'rds-prod-mysql-02', ip: '192.168.2.202', type: '数据库', os: 'MySQL 8.0' },
    { name: 'kafka-prod-cluster-03', ip: '192.168.3.303', type: '中间件', os: 'Kafka 2.8' },
    { name: 'ecs-prod-app-05', ip: '192.168.1.105', type: '云服务器', os: 'Linux - Ubuntu 20.04' },
    { name: 'nas-storage-01', ip: '192.168.4.101', type: '存储设备', os: 'NAS OS 5.2' },
    { name: 'ecs-dev-web-06', ip: '192.168.1.106', type: '云服务器', os: 'Linux - CentOS 8' },
    { name: 'redis-prod-cache-01', ip: '192.168.5.201', type: '缓存', os: 'Redis 6.2' },
    { name: 'k8s-master-01', ip: '192.168.6.101', type: '容器平台', os: 'Kubernetes 1.24' }
  ]

  const statuses: DisposalStatus[] = ['pending', 'processing', 'completed']
  const assigners = ['赵经理', '钱主管', '孙总监', '李组长']

  const records: VulnerabilityDisposalRecord[] = []

  vulnerabilities.forEach((vuln, index) => {
    const asset = assets[index % assets.length]
    const status = statuses[index % statuses.length]
    const hasAssignment = status !== 'pending'

    const baseTime = Date.now() - (index * 86400000) // 每条记录间隔一天
    const publishedTime = new Date(baseTime).toISOString().slice(0, 19).replace('T', ' ')
    const assignedTime = hasAssignment ? new Date(baseTime + 3600000).toISOString().slice(0, 19).replace('T', ' ') : null
    const deadlineTime = hasAssignment ? new Date(baseTime + 7 * 86400000).toISOString().slice(0, 10) : null

    const processingRecords = []

    if (hasAssignment) {
      processingRecords.push({
        id: `pr-${index}-1`,
        timestamp: assignedTime!,
        action: '任务已派发',
        operator: assigners[index % assigners.length]
      })
    }

    if (status === 'processing') {
      processingRecords.push({
        id: `pr-${index}-2`,
        timestamp: new Date(baseTime + 7200000).toISOString().slice(0, 19).replace('T', ' '),
        action: '开始处理',
        operator: '张工程师',
        method: 'version_upgrade' as ProcessingMethod
      })
    }

    if (status === 'completed') {
      processingRecords.push({
        id: `pr-${index}-2`,
        timestamp: new Date(baseTime + 7200000).toISOString().slice(0, 19).replace('T', ' '),
        action: '开始处理',
        operator: '张工程师',
        method: 'version_upgrade' as ProcessingMethod
      })
      processingRecords.push({
        id: `pr-${index}-3`,
        timestamp: new Date(baseTime + 86400000).toISOString().slice(0, 19).replace('T', ' '),
        action: '处理完成',
        operator: '张工程师',
        method: 'version_upgrade' as ProcessingMethod,
        result: '已升级到安全版本,问题已解决'
      })
    }

    records.push({
      id: `vuln-${index + 1}`,
      ...vuln,
      assetName: asset.name,
      ipAddress: asset.ip,
      assetType: asset.type,
      osVersion: asset.os,
      publishedTime,
      status,
      assignedBy: hasAssignment ? assigners[index % assigners.length] : null,
      assignedTime,
      deadline: deadlineTime,
      instructions: hasAssignment ? '请尽快处理该脆弱性,确保业务系统安全' : null,
      processingRecords
    })
  })

  return records
}

// 生成统计指标
export const generateDisposalMetrics = (records: VulnerabilityDisposalRecord[]): DisposalMetrics => {
  const pending = records.filter(r => r.status === 'pending').length
  const processing = records.filter(r => r.status === 'processing').length

  // 计算本月完成数量
  const now = new Date()
  const firstDayOfMonth = new Date(now.getFullYear(), now.getMonth(), 1)
  const completedThisMonth = records.filter(r => {
    if (r.status !== 'completed') return false
    const lastRecord = r.processingRecords[r.processingRecords.length - 1]
    const completeTime = new Date(lastRecord.timestamp)
    return completeTime >= firstDayOfMonth
  }).length

  return {
    pending,
    pendingTrend: '+12%',
    processing,
    processingTrend: '-8%',
    completedThisMonth,
    completedTrend: '+15%'
  }
}
