import React, { useState } from 'react'
import { Drawer, Descriptions, Tag, Timeline, Tabs, Card, Alert as AntAlert, Space, Typography, Row, Col, Button, Progress } from 'antd'
import {
  ClockCircleOutlined,
  CheckCircleOutlined,
  ExclamationCircleOutlined,
  UserOutlined,
  BugOutlined,
  SafetyOutlined
} from '@ant-design/icons'
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import 'dayjs/locale/zh-cn'
import type { Vulnerability } from '../types'

dayjs.extend(relativeTime)
dayjs.locale('zh-cn')

const { Text, Paragraph } = Typography

interface VulnerabilityTaskDetailDrawerProps {
  visible: boolean
  vulnerability: Vulnerability | null
  onClose: () => void
  onHandle?: (id: string) => void
}

/**
 * 脆弱性任务详情抽屉
 * 展示脆弱性任务的详细信息和执行记录
 */
const VulnerabilityTaskDetailDrawer: React.FC<VulnerabilityTaskDetailDrawerProps> = ({
  visible,
  vulnerability,
  onClose,
  onHandle
}) => {
  const [activeTab, setActiveTab] = useState('basic')

  if (!vulnerability) {
    return null
  }

  // 风险等级配置
  const riskLevelConfig = {
    high: { color: '#ff4d4f', icon: <ExclamationCircleOutlined />, label: '高危', progress: 90 },
    medium: { color: '#faad14', icon: <ExclamationCircleOutlined />, label: '中危', progress: 60 },
    low: { color: '#52c41a', icon: <BugOutlined />, label: '低危', progress: 30 }
  }

  // 状态配置
  const statusConfig = {
    unhandled: { color: 'red', icon: <ClockCircleOutlined />, label: '待处理' },
    processing: { color: 'blue', icon: <ClockCircleOutlined />, label: '处理中' },
    completed: { color: 'green', icon: <CheckCircleOutlined />, label: '已完成' }
  }

  const riskCfg = riskLevelConfig[vulnerability.riskLevel]
  const statusCfg = statusConfig[vulnerability.status]

  // 模拟执行记录数据
  const executionRecords = [
    {
      timestamp: vulnerability.publishTime,
      action: '漏洞发布',
      operator: 'CVE官方',
      description: `CVE编号 ${vulnerability.cveId} 发布`,
      status: 'published'
    },
    {
      timestamp: dayjs(vulnerability.publishTime).add(1, 'hour').toISOString(),
      action: '漏洞扫描',
      operator: '安全扫描系统',
      description: `检测到受影响资产：${vulnerability.affectedAsset.name}`,
      status: 'scanned'
    },
    {
      timestamp: dayjs(vulnerability.publishTime).add(2, 'hour').toISOString(),
      action: '任务创建',
      operator: '系统',
      description: '已自动创建脆弱性处置任务',
      status: 'created'
    }
  ]

  if (vulnerability.status === 'processing' || vulnerability.status === 'completed') {
    executionRecords.push({
      timestamp: dayjs(vulnerability.publishTime).add(4, 'hour').toISOString(),
      action: '任务指派',
      operator: '安全管理员',
      description: '已指派给赵六处理',
      status: 'assigned'
    })
    executionRecords.push({
      timestamp: dayjs(vulnerability.publishTime).add(6, 'hour').toISOString(),
      action: '开始处理',
      operator: '赵六',
      description: '已确认漏洞，开始制定修复方案',
      status: 'processing'
    })
  }

  if (vulnerability.status === 'completed') {
    executionRecords.push({
      timestamp: dayjs(vulnerability.publishTime).add(1, 'day').toISOString(),
      action: '应用补丁',
      operator: '赵六',
      description: '已部署安全补丁',
      status: 'patched'
    })
    executionRecords.push({
      timestamp: dayjs(vulnerability.publishTime).add(1, 'day').add(2, 'hour').toISOString(),
      action: '验证完成',
      operator: '安全管理员',
      description: '漏洞已修复，验证通过',
      status: 'completed'
    })
  }

  // 基本信息Tab
  const BasicInfoTab = (
    <div style={{ padding: '8px 0' }}>
      {/* 漏洞概要 */}
      <AntAlert
        message={
          <Space>
            <span style={{ fontSize: '16px', fontWeight: 600 }}>{vulnerability.name}</span>
            <Tag icon={riskCfg.icon} color={riskCfg.color}>
              {riskCfg.label}
            </Tag>
            <Tag icon={statusCfg.icon} color={statusCfg.color}>
              {statusCfg.label}
            </Tag>
          </Space>
        }
        description={`CVE编号: ${vulnerability.cveId}`}
        type={vulnerability.riskLevel === 'high' ? 'error' : 'warning'}
        showIcon
        style={{ marginBottom: 24 }}
      />

      {/* 基本信息 */}
      <Card title="漏洞信息" size="small" style={{ marginBottom: 16 }}>
        <Descriptions column={2} size="small">
          <Descriptions.Item label="任务ID">
            <Text code copyable>{vulnerability.id}</Text>
          </Descriptions.Item>
          <Descriptions.Item label="CVE编号">
            <Text code copyable>{vulnerability.cveId}</Text>
          </Descriptions.Item>
          <Descriptions.Item label="漏洞名称">
            <Text strong>{vulnerability.name}</Text>
          </Descriptions.Item>
          <Descriptions.Item label="风险等级">
            <Space>
              <Tag icon={riskCfg.icon} color={riskCfg.color}>
                {riskCfg.label}
              </Tag>
              <Progress
                percent={riskCfg.progress}
                size="small"
                status={vulnerability.riskLevel === 'high' ? 'exception' : 'normal'}
                style={{ width: 100 }}
              />
            </Space>
          </Descriptions.Item>
          <Descriptions.Item label="任务状态">
            <Tag icon={statusCfg.icon} color={statusCfg.color}>
              {statusCfg.label}
            </Tag>
          </Descriptions.Item>
          <Descriptions.Item label="发布时间">
            <Space direction="vertical" size={0}>
              <Text>{dayjs(vulnerability.publishTime).format('YYYY-MM-DD HH:mm:ss')}</Text>
              <Text type="secondary" style={{ fontSize: '12px' }}>
                {dayjs(vulnerability.publishTime).fromNow()}
              </Text>
            </Space>
          </Descriptions.Item>
        </Descriptions>
      </Card>

      {/* 受影响资产 */}
      <Card title="受影响资产" size="small" style={{ marginBottom: 16 }}>
        <Descriptions column={2} size="small">
          <Descriptions.Item label="资产名称">
            <Text strong>{vulnerability.affectedAsset.name}</Text>
          </Descriptions.Item>
          <Descriptions.Item label="IP地址">
            <Text code>{vulnerability.affectedAsset.ipAddress}</Text>
          </Descriptions.Item>
          <Descriptions.Item label="影响业务">
            <Text strong>{vulnerability.affectedBusiness}</Text>
          </Descriptions.Item>
        </Descriptions>
      </Card>

      {/* 漏洞描述 */}
      {vulnerability.description && (
        <Card title="漏洞描述" size="small" style={{ marginBottom: 16 }}>
          <Paragraph style={{ marginBottom: 0 }}>
            {vulnerability.description}
          </Paragraph>
        </Card>
      )}

      {/* 修复建议 */}
      <Card title="修复建议" size="small" style={{ marginBottom: 16 }}>
        <Paragraph style={{ marginBottom: 0 }}>
          1. 立即部署官方安全补丁
          <br />
          2. 如无可用补丁，考虑临时缓解措施（如限制访问、加强监控）
          <br />
          3. 修复后进行全面的安全测试验证
          <br />
          4. 更新安全基线，避免类似漏洞再次出现
        </Paragraph>
      </Card>

      {/* 处理结果 (如果已完成) */}
      {vulnerability.status === 'completed' && (
        <Card title="处理结果" size="small">
          <AntAlert
            message="漏洞已修复完成"
            description="已成功部署安全补丁并通过验证测试，系统已恢复安全状态。"
            type="success"
            showIcon
            icon={<SafetyOutlined />}
          />
          <Descriptions column={1} size="small" style={{ marginTop: 16 }}>
            <Descriptions.Item label="处理方式">
              部署官方安全补丁
            </Descriptions.Item>
            <Descriptions.Item label="处理备注">
              已完成补丁部署，验证测试通过。同时更新了安全配置基线。
            </Descriptions.Item>
            <Descriptions.Item label="处理人员">
              <Space>
                <UserOutlined />
                <Text>赵六</Text>
              </Space>
            </Descriptions.Item>
            <Descriptions.Item label="验证人员">
              <Space>
                <SafetyOutlined />
                <Text>安全管理员</Text>
              </Space>
            </Descriptions.Item>
          </Descriptions>
        </Card>
      )}
    </div>
  )

  // 执行记录Tab
  const ExecutionRecordsTab = (
    <div style={{ padding: '8px 0' }}>
      <Card title="执行时间线" size="small">
        <Timeline
          items={executionRecords.map((record) => {
            const colorMap: Record<string, 'red' | 'blue' | 'green' | 'gray' | 'orange'> = {
              published: 'orange',
              scanned: 'blue',
              created: 'blue',
              assigned: 'blue',
              processing: 'blue',
              patched: 'green',
              completed: 'green'
            }

            return {
              color: colorMap[record.status] || 'blue',
              children: (
                <div>
                  <div style={{ marginBottom: 4 }}>
                    <Text strong>{record.action}</Text>
                    <Text type="secondary" style={{ marginLeft: 12, fontSize: '12px' }}>
                      {dayjs(record.timestamp).format('YYYY-MM-DD HH:mm:ss')}
                    </Text>
                  </div>
                  <div style={{ fontSize: '12px', color: '#666' }}>
                    操作人: {record.operator}
                  </div>
                  <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>
                    {record.description}
                  </div>
                </div>
              )
            }
          })}
        />
      </Card>

      {/* 处理统计 */}
      <Card title="处理统计" size="small" style={{ marginTop: 16 }}>
        <Row gutter={16}>
          <Col span={8}>
            <div style={{ textAlign: 'center', padding: '12px', background: '#fafafa', borderRadius: 4 }}>
              <div style={{ fontSize: '24px', fontWeight: 600, color: '#1890ff' }}>
                {executionRecords.length}
              </div>
              <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>执行步骤</div>
            </div>
          </Col>
          <Col span={8}>
            <div style={{ textAlign: 'center', padding: '12px', background: '#fafafa', borderRadius: 4 }}>
              <div style={{ fontSize: '24px', fontWeight: 600, color: '#52c41a' }}>
                {dayjs().diff(dayjs(vulnerability.publishTime), 'hour')}小时
              </div>
              <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>总耗时</div>
            </div>
          </Col>
          <Col span={8}>
            <div style={{ textAlign: 'center', padding: '12px', background: '#fafafa', borderRadius: 4 }}>
              <div style={{ fontSize: '24px', fontWeight: 600, color: '#fa8c16' }}>
                {executionRecords.filter(r => r.operator !== '系统' && r.operator !== '安全扫描系统').length}
              </div>
              <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>人工操作</div>
            </div>
          </Col>
        </Row>
      </Card>

      {/* 风险评估 */}
      <Card title="风险评估" size="small" style={{ marginTop: 16 }}>
        <Row gutter={16}>
          <Col span={8}>
            <div style={{ textAlign: 'center', padding: '12px', background: '#fff1f0', borderRadius: 4, border: '1px solid #ffccc7' }}>
              <div style={{ fontSize: '20px', fontWeight: 600, color: '#ff4d4f' }}>
                {vulnerability.riskLevel === 'high' ? '高' : vulnerability.riskLevel === 'medium' ? '中' : '低'}
              </div>
              <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>危险等级</div>
            </div>
          </Col>
          <Col span={8}>
            <div style={{ textAlign: 'center', padding: '12px', background: '#fff7e6', borderRadius: 4, border: '1px solid #ffd591' }}>
              <div style={{ fontSize: '20px', fontWeight: 600, color: '#fa8c16' }}>
                {vulnerability.riskLevel === 'high' ? '核心' : vulnerability.riskLevel === 'medium' ? '重要' : '一般'}
              </div>
              <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>资产重要度</div>
            </div>
          </Col>
          <Col span={8}>
            <div style={{ textAlign: 'center', padding: '12px', background: '#f6ffed', borderRadius: 4, border: '1px solid #b7eb8f' }}>
              <div style={{ fontSize: '20px', fontWeight: 600, color: '#52c41a' }}>
                {vulnerability.riskLevel === 'high' ? '24h' : vulnerability.riskLevel === 'medium' ? '72h' : '1周'}
              </div>
              <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>建议修复期限</div>
            </div>
          </Col>
        </Row>
      </Card>
    </div>
  )

  const tabItems = [
    {
      key: 'basic',
      label: '基本信息',
      children: BasicInfoTab
    },
    {
      key: 'execution',
      label: '执行记录',
      children: ExecutionRecordsTab
    }
  ]

  return (
    <Drawer
      title={
        <Space>
          <span>脆弱性任务详情</span>
          {vulnerability.status !== 'completed' && (
            <Tag icon={statusCfg.icon} color={statusCfg.color}>
              {statusCfg.label}
            </Tag>
          )}
        </Space>
      }
      width="65%"
      open={visible}
      onClose={onClose}
      extra={
        vulnerability.status === 'unhandled' && onHandle && (
          <Button type="primary" onClick={() => onHandle(vulnerability.id)}>
            立即处理
          </Button>
        )
      }
    >
      <Tabs
        activeKey={activeTab}
        onChange={setActiveTab}
        items={tabItems}
      />
    </Drawer>
  )
}

export default VulnerabilityTaskDetailDrawer
