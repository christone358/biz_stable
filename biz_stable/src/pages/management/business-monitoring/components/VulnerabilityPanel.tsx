import React, { useState } from 'react'
import { Row, Col, Statistic, Table, Tag, Button, Space, Typography, Empty, Drawer, Descriptions, Alert, Timeline } from 'antd'
import { EyeOutlined, BugOutlined, ClockCircleOutlined, CheckCircleOutlined, SyncOutlined, ExclamationCircleOutlined } from '@ant-design/icons'
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import 'dayjs/locale/zh-cn'
import { VulnerabilitySummary, VulnerabilityDetail } from '../types'
import './VulnerabilityPanel.css'

dayjs.extend(relativeTime)
dayjs.locale('zh-cn')

const { Text, Paragraph } = Typography

interface VulnerabilityPanelProps {
  summary: VulnerabilitySummary
  details: VulnerabilityDetail[]
  onRowClick?: (affectedAssetId: string) => void
}

const VulnerabilityPanel: React.FC<VulnerabilityPanelProps> = ({ summary, details, onRowClick }) => {
  // 详情抽屉状态
  const [detailVisible, setDetailVisible] = useState(false)
  const [selectedVulnerability, setSelectedVulnerability] = useState<VulnerabilityDetail | null>(null)

  // 严重程度配置
  const severityConfig = {
    CRITICAL: { color: '#FF4D4F', label: '严重', icon: <ExclamationCircleOutlined /> },
    HIGH: { color: '#FF7A45', label: '高危', icon: <BugOutlined /> },
    MEDIUM: { color: '#FAAD14', label: '中危', icon: <ExclamationCircleOutlined /> },
    LOW: { color: '#52C41A', label: '低危', icon: <BugOutlined /> }
  }

  // 状态配置
  const statusConfig = {
    OPEN: { color: 'red', label: '待处理', icon: <ClockCircleOutlined /> },
    FIXING: { color: 'orange', label: '修复中', icon: <SyncOutlined spin /> },
    RESOLVED: { color: 'green', label: '已修复', icon: <CheckCircleOutlined /> }
  }

  // 打开详情
  const handleViewDetail = (vulnerability: VulnerabilityDetail) => {
    setSelectedVulnerability(vulnerability)
    setDetailVisible(true)
  }

  // 表格列定义
  const columns = [
    {
      title: '漏洞标题',
      dataIndex: 'title',
      key: 'title',
      width: 180,
      render: (text: string, record: VulnerabilityDetail) => (
        <Space direction="vertical" size={0}>
          <Text strong style={{ fontSize: '13px' }}>{text}</Text>
          {record.cveId && <Text type="secondary" style={{ fontSize: '11px' }}>{record.cveId}</Text>}
        </Space>
      )
    },
    {
      title: '严重程度',
      dataIndex: 'severity',
      key: 'severity',
      width: 90,
      align: 'center' as const,
      render: (severity: keyof typeof severityConfig) => (
        <Tag color={severityConfig[severity].color}>{severityConfig[severity].label}</Tag>
      )
    },
    {
      title: 'CVSS',
      dataIndex: 'cvssScore',
      key: 'cvssScore',
      width: 70,
      align: 'center' as const,
      render: (score: number) => (
        <Text strong style={{ color: score >= 9 ? '#FF4D4F' : score >= 7 ? '#FAAD14' : '#52C41A' }}>
          {score.toFixed(1)}
        </Text>
      )
    },
    {
      title: '影响资产',
      dataIndex: 'affectedAsset',
      key: 'affectedAsset',
      width: 120,
      ellipsis: true
    },
    {
      title: '发现时间',
      dataIndex: 'discoveryDate',
      key: 'discoveryDate',
      width: 100,
      render: (date: string) => dayjs(date).format('MM-DD')
    },
    {
      title: '状态',
      dataIndex: 'status',
      key: 'status',
      width: 80,
      align: 'center' as const,
      render: (status: keyof typeof statusConfig) => (
        <Tag color={statusConfig[status].color}>{statusConfig[status].label}</Tag>
      )
    },
    {
      title: '操作',
      key: 'action',
      width: 80,
      align: 'center' as const,
      render: (_: any, record: VulnerabilityDetail) => (
        <Button
          type="link"
          size="small"
          icon={<EyeOutlined />}
          onClick={(e) => {
            e.stopPropagation()
            handleViewDetail(record)
          }}
        >
          详情
        </Button>
      )
    }
  ]

  return (
    <div className="vulnerability-panel-content">
      {/* 统计概览 */}
      <div className="vulnerability-summary">
        <Row gutter={16}>
          <Col flex="1">
            <Statistic
              title="严重"
              value={summary.critical}
              suffix="个"
              valueStyle={{ color: '#FF4D4F', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
          <Col flex="1">
            <Statistic
              title="高危"
              value={summary.high}
              suffix="个"
              valueStyle={{ color: '#FF7A45', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
          <Col flex="1">
            <Statistic
              title="中危"
              value={summary.medium}
              suffix="个"
              valueStyle={{ color: '#FAAD14', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
          <Col flex="1">
            <Statistic
              title="低危"
              value={summary.low}
              suffix="个"
              valueStyle={{ color: '#52C41A', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
        </Row>
      </div>

      {/* 详细列表 */}
      <div className="vulnerability-details">
        <Table
          columns={columns}
          dataSource={details}
          rowKey="id"
          size="small"
          pagination={{
            pageSize: 5,
            size: 'small',
            showSizeChanger: false,
            showTotal: (total) => `共 ${total} 条`
          }}
          locale={{
            emptyText: (
              <Empty
                image={Empty.PRESENTED_IMAGE_SIMPLE}
                description="暂无脆弱性数据"
              />
            )
          }}
          onRow={(record) => ({
            onClick: () => {
              if (onRowClick && record.affectedAssetId) {
                onRowClick(record.affectedAssetId)
              }
            },
            style: { cursor: onRowClick ? 'pointer' : 'default' }
          })}
        />
      </div>

      {/* 脆弱性详情抽屉 */}
      <Drawer
        title={
          <Space>
            <span>脆弱性详情</span>
            {selectedVulnerability && (
              <Tag icon={severityConfig[selectedVulnerability.severity].icon} color={severityConfig[selectedVulnerability.severity].color}>
                {severityConfig[selectedVulnerability.severity].label}
              </Tag>
            )}
          </Space>
        }
        width="55%"
        open={detailVisible}
        onClose={() => setDetailVisible(false)}
      >
        {selectedVulnerability && (
          <div>
            {/* 脆弱性概要 */}
            <Alert
              message={selectedVulnerability.title}
              description={selectedVulnerability.description}
              type={selectedVulnerability.severity === 'CRITICAL' || selectedVulnerability.severity === 'HIGH' ? 'error' : 'warning'}
              showIcon
              style={{ marginBottom: 24 }}
            />

            {/* 基本信息 */}
            <Descriptions title="基本信息" column={2} size="small" style={{ marginBottom: 24 }}>
              <Descriptions.Item label="漏洞ID">
                <Text code copyable>{selectedVulnerability.id}</Text>
              </Descriptions.Item>
              {selectedVulnerability.cveId && (
                <Descriptions.Item label="CVE编号">
                  <Text code copyable>{selectedVulnerability.cveId}</Text>
                </Descriptions.Item>
              )}
              <Descriptions.Item label="严重程度">
                <Tag icon={severityConfig[selectedVulnerability.severity].icon} color={severityConfig[selectedVulnerability.severity].color}>
                  {severityConfig[selectedVulnerability.severity].label}
                </Tag>
              </Descriptions.Item>
              <Descriptions.Item label="CVSS评分">
                <Space>
                  <Text
                    strong
                    style={{
                      color: selectedVulnerability.cvssScore >= 9 ? '#FF4D4F' : selectedVulnerability.cvssScore >= 7 ? '#FAAD14' : '#52C41A',
                      fontSize: '16px'
                    }}
                  >
                    {selectedVulnerability.cvssScore.toFixed(1)}
                  </Text>
                  <Text type="secondary">/ 10.0</Text>
                </Space>
              </Descriptions.Item>
              <Descriptions.Item label="漏洞状态">
                <Tag icon={statusConfig[selectedVulnerability.status].icon} color={statusConfig[selectedVulnerability.status].color}>
                  {statusConfig[selectedVulnerability.status].label}
                </Tag>
              </Descriptions.Item>
              <Descriptions.Item label="影响资产">
                <Text strong>{selectedVulnerability.affectedAsset}</Text>
              </Descriptions.Item>
              <Descriptions.Item label="发现时间">
                <Space direction="vertical" size={0}>
                  <Text>{dayjs(selectedVulnerability.discoveryDate).format('YYYY-MM-DD HH:mm:ss')}</Text>
                  <Text type="secondary" style={{ fontSize: '12px' }}>
                    {dayjs(selectedVulnerability.discoveryDate).fromNow()}
                  </Text>
                </Space>
              </Descriptions.Item>
            </Descriptions>

            {/* 漏洞描述 */}
            <Descriptions title="漏洞描述" column={1} size="small" style={{ marginBottom: 24 }}>
              <Descriptions.Item>
                <Paragraph>{selectedVulnerability.description}</Paragraph>
              </Descriptions.Item>
            </Descriptions>

            {/* 修复建议 */}
            {selectedVulnerability.fixRecommendation && (
              <Descriptions title="修复建议" column={1} size="small" style={{ marginBottom: 24 }}>
                <Descriptions.Item>
                  <Paragraph>{selectedVulnerability.fixRecommendation}</Paragraph>
                </Descriptions.Item>
              </Descriptions>
            )}

            {/* 影响分析 */}
            <div style={{ marginBottom: 24 }}>
              <Text strong style={{ fontSize: '14px', marginBottom: 12, display: 'block' }}>影响分析</Text>
              <Row gutter={16}>
                <Col span={8}>
                  <div style={{ textAlign: 'center', padding: '12px', background: '#fafafa', borderRadius: 4 }}>
                    <div style={{ fontSize: '20px', fontWeight: 600, color: severityConfig[selectedVulnerability.severity].color }}>
                      {severityConfig[selectedVulnerability.severity].label}
                    </div>
                    <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>风险等级</div>
                  </div>
                </Col>
                <Col span={8}>
                  <div style={{ textAlign: 'center', padding: '12px', background: '#fafafa', borderRadius: 4 }}>
                    <div style={{ fontSize: '20px', fontWeight: 600, color: '#1890ff' }}>
                      {selectedVulnerability.severity === 'CRITICAL' ? '核心' : selectedVulnerability.severity === 'HIGH' ? '重要' : '一般'}
                    </div>
                    <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>资产级别</div>
                  </div>
                </Col>
                <Col span={8}>
                  <div style={{ textAlign: 'center', padding: '12px', background: '#fafafa', borderRadius: 4 }}>
                    <div style={{ fontSize: '20px', fontWeight: 600, color: '#52c41a' }}>
                      {selectedVulnerability.severity === 'CRITICAL' ? '24h' : selectedVulnerability.severity === 'HIGH' ? '72h' : '7天'}
                    </div>
                    <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>建议修复时间</div>
                  </div>
                </Col>
              </Row>
            </div>

            {/* 处理时间线 */}
            {selectedVulnerability.status !== 'OPEN' && (
              <div>
                <Text strong style={{ fontSize: '14px', marginBottom: 12, display: 'block' }}>处理时间线</Text>
                <Timeline
                  items={[
                    {
                      color: 'red',
                      children: (
                        <div>
                          <Text strong>漏洞发现</Text>
                          <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>
                            {dayjs(selectedVulnerability.discoveryDate).format('YYYY-MM-DD HH:mm:ss')}
                          </div>
                        </div>
                      )
                    },
                    ...(selectedVulnerability.status === 'FIXING' || selectedVulnerability.status === 'RESOLVED' ? [{
                      color: 'blue' as const,
                      children: (
                        <div>
                          <Text strong>开始修复</Text>
                          <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>
                            {dayjs(selectedVulnerability.discoveryDate).add(1, 'day').format('YYYY-MM-DD HH:mm:ss')}
                          </div>
                        </div>
                      )
                    }] : []),
                    ...(selectedVulnerability.status === 'RESOLVED' ? [{
                      color: 'green' as const,
                      children: (
                        <div>
                          <Text strong>修复完成</Text>
                          <div style={{ fontSize: '12px', color: '#666', marginTop: 4 }}>
                            {dayjs(selectedVulnerability.discoveryDate).add(3, 'day').format('YYYY-MM-DD HH:mm:ss')}
                          </div>
                        </div>
                      )
                    }] : [])
                  ]}
                />
              </div>
            )}
          </div>
        )}
      </Drawer>
    </div>
  )
}

export default VulnerabilityPanel
