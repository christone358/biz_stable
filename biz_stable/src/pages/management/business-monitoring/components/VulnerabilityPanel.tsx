import React from 'react'
import { Row, Col, Statistic, Table, Tag, Button, Space, Typography, Empty } from 'antd'
import { EyeOutlined } from '@ant-design/icons'
import dayjs from 'dayjs'
import { VulnerabilitySummary, VulnerabilityDetail } from '../types'
import './VulnerabilityPanel.css'

const { Text } = Typography

interface VulnerabilityPanelProps {
  summary: VulnerabilitySummary
  details: VulnerabilityDetail[]
  onRowClick?: (affectedAssetId: string) => void
}

const VulnerabilityPanel: React.FC<VulnerabilityPanelProps> = ({ summary, details, onRowClick }) => {
  // 严重程度配置
  const severityConfig = {
    CRITICAL: { color: '#FF4D4F', label: '严重' },
    HIGH: { color: '#FF7A45', label: '高危' },
    MEDIUM: { color: '#FAAD14', label: '中危' },
    LOW: { color: '#52C41A', label: '低危' }
  }

  // 状态配置
  const statusConfig = {
    OPEN: { color: 'red', label: '待处理' },
    FIXING: { color: 'orange', label: '修复中' },
    RESOLVED: { color: 'green', label: '已修复' }
  }

  // 表格列定义
  const columns = [
    {
      title: '漏洞标题',
      dataIndex: 'title',
      key: 'title',
      width: 180,
      render: (text: string, record: VulnerabilityDetail) => (
        <Space direction="vertical" size={0}>
          <Text strong style={{ fontSize: '13px' }}>{text}</Text>
          {record.cveId && <Text type="secondary" style={{ fontSize: '11px' }}>{record.cveId}</Text>}
        </Space>
      )
    },
    {
      title: '严重程度',
      dataIndex: 'severity',
      key: 'severity',
      width: 90,
      align: 'center' as const,
      render: (severity: keyof typeof severityConfig) => (
        <Tag color={severityConfig[severity].color}>{severityConfig[severity].label}</Tag>
      )
    },
    {
      title: 'CVSS',
      dataIndex: 'cvssScore',
      key: 'cvssScore',
      width: 70,
      align: 'center' as const,
      render: (score: number) => (
        <Text strong style={{ color: score >= 9 ? '#FF4D4F' : score >= 7 ? '#FAAD14' : '#52C41A' }}>
          {score.toFixed(1)}
        </Text>
      )
    },
    {
      title: '影响资产',
      dataIndex: 'affectedAsset',
      key: 'affectedAsset',
      width: 120,
      ellipsis: true
    },
    {
      title: '发现时间',
      dataIndex: 'discoveryDate',
      key: 'discoveryDate',
      width: 100,
      render: (date: string) => dayjs(date).format('MM-DD')
    },
    {
      title: '状态',
      dataIndex: 'status',
      key: 'status',
      width: 80,
      align: 'center' as const,
      render: (status: keyof typeof statusConfig) => (
        <Tag color={statusConfig[status].color}>{statusConfig[status].label}</Tag>
      )
    }
  ]

  return (
    <div className="vulnerability-panel-content">
      {/* 统计概览 */}
      <div className="vulnerability-summary">
        <Row gutter={16}>
          <Col flex="1">
            <Statistic
              title="严重"
              value={summary.critical}
              suffix="个"
              valueStyle={{ color: '#FF4D4F', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
          <Col flex="1">
            <Statistic
              title="高危"
              value={summary.high}
              suffix="个"
              valueStyle={{ color: '#FF7A45', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
          <Col flex="1">
            <Statistic
              title="中危"
              value={summary.medium}
              suffix="个"
              valueStyle={{ color: '#FAAD14', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
          <Col flex="1">
            <Statistic
              title="低危"
              value={summary.low}
              suffix="个"
              valueStyle={{ color: '#52C41A', fontSize: '20px', fontWeight: 600 }}
            />
          </Col>
        </Row>
      </div>

      {/* 详细列表 */}
      <div className="vulnerability-details">
        <Table
          columns={columns}
          dataSource={details}
          rowKey="id"
          size="small"
          pagination={{
            pageSize: 5,
            size: 'small',
            showSizeChanger: false,
            showTotal: (total) => `共 ${total} 条`
          }}
          locale={{
            emptyText: (
              <Empty
                image={Empty.PRESENTED_IMAGE_SIMPLE}
                description="暂无脆弱性数据"
              />
            )
          }}
          onRow={(record) => ({
            onClick: () => {
              if (onRowClick && record.affectedAssetId) {
                onRowClick(record.affectedAssetId)
              }
            },
            style: { cursor: onRowClick ? 'pointer' : 'default' }
          })}
        />
      </div>
    </div>
  )
}

export default VulnerabilityPanel
