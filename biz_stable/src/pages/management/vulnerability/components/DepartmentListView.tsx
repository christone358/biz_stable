/**
 * 修复单位列表视图组件
 * 显示扁平的责任单位列表
 */

import React, { useMemo } from 'react'
import { List, Badge } from 'antd'
import { TeamOutlined, WarningOutlined } from '@ant-design/icons'
import { generateDepartmentVulnerabilityList } from '../../../../mock/vulnerability-data'

interface DepartmentListViewProps {
  searchKeyword: string
  selectedId: string | null
  onSelect: (nodeId: string) => void
}

const DepartmentListView: React.FC<DepartmentListViewProps> = ({
  searchKeyword,
  selectedId,
  onSelect
}) => {
  // 获取部门列表数据
  const departmentData = useMemo(() => generateDepartmentVulnerabilityList(), [])

  // 搜索过滤
  const filteredData = useMemo(() => {
    if (!searchKeyword) {
      return departmentData.departments
    }

    return departmentData.departments.filter((dept) =>
      dept.name.toLowerCase().includes(searchKeyword.toLowerCase())
    )
  }, [departmentData, searchKeyword])

  // 全部和未指派
  const allItem = {
    id: 'all',
    name: '全部',
    count: departmentData.totalCount
  }

  const unassignedItem = {
    id: 'dept-unassigned',
    name: '未指派单位',
    count: departmentData.unassignedCount
  }

  return (
    <div className="department-list-view">
      {/* 全部选项 */}
      <div
        className={`list-item ${selectedId === 'all' ? 'list-item-selected' : ''}`}
        onClick={() => onSelect('all')}
      >
        <div className="list-item-content">
          <TeamOutlined className="list-item-icon" />
          <span className="list-item-name">{allItem.name}</span>
          <Badge count={allItem.count} style={{ backgroundColor: '#1890ff' }} />
        </div>
      </div>

      {/* 部门列表 */}
      <List
        dataSource={filteredData}
        renderItem={(item) => (
          <div
            key={item.id}
            className={`list-item ${selectedId === item.id ? 'list-item-selected' : ''}`}
            onClick={() => onSelect(item.id)}
          >
            <div className="list-item-content">
              <TeamOutlined className="list-item-icon" />
              <span className="list-item-name">{item.name}</span>
              <Badge count={item.count} style={{ backgroundColor: '#fa8c16' }} />
            </div>
          </div>
        )}
      />

      {/* 未指派单位 */}
      <div
        className={`list-item list-item-special ${
          selectedId === 'dept-unassigned' ? 'list-item-selected' : ''
        }`}
        onClick={() => onSelect('dept-unassigned')}
      >
        <div className="list-item-content">
          <WarningOutlined className="list-item-icon" style={{ color: '#faad14' }} />
          <span className="list-item-name">{unassignedItem.name}</span>
          <Badge count={unassignedItem.count} style={{ backgroundColor: '#faad14' }} />
        </div>
      </div>
    </div>
  )
}

export default DepartmentListView
