import React from 'react'
import { Card, Input, Select, Checkbox } from 'antd'
import { SearchOutlined } from '@ant-design/icons'
import type { TreeNode, DimensionType } from '../types'
import './DimensionTree.css'

interface DimensionTreeProps {
  dimension: DimensionType
  nodes: TreeNode[]
  selectedNodeId: string | null
  onDimensionChange: (dimension: DimensionType) => void
  onNodeSelect: (nodeId: string) => void
  onSearchChange: (keyword: string) => void
}

const DIMENSION_OPTIONS = [
  { value: 'business-system' as DimensionType, label: '业务系统' },
  { value: 'department' as DimensionType, label: '归属单位' },
  { value: 'vulnerability-type' as DimensionType, label: '脆弱性类型' }
]

const DimensionTree: React.FC<DimensionTreeProps> = ({
  dimension,
  nodes,
  selectedNodeId,
  onDimensionChange,
  onNodeSelect,
  onSearchChange
}) => {
  // 计算总数
  const totalCount = nodes.reduce((sum, node) => sum + node.count, 0)

  return (
    <Card className="dimension-tree-card" bodyStyle={{ padding: 0 }}>
      <div className="tree-header">脆弱性视图</div>

      <div className="tree-dimension">
        <Select
          value={dimension}
          onChange={onDimensionChange}
          options={DIMENSION_OPTIONS}
          style={{ width: '100%' }}
        />
      </div>

      <div className="tree-search">
        <Input
          placeholder="请输入关键字"
          prefix={<SearchOutlined />}
          onChange={(e) => onSearchChange(e.target.value)}
          allowClear
        />
      </div>

      <div className="tree-container">
        {/* 全部选项 */}
        <div
          className={`tree-node ${selectedNodeId === 'all' ? 'tree-node-active' : ''}`}
          onClick={() => onNodeSelect('all')}
        >
          <Checkbox checked={selectedNodeId === 'all'} />
          <span className="tree-node-name">全部</span>
          <span className="tree-badge">{totalCount}</span>
        </div>

        {/* 树节点列表 */}
        {nodes.map((node) => (
          <div
            key={node.id}
            className={`tree-node ${selectedNodeId === node.id ? 'tree-node-active' : ''}`}
            onClick={() => onNodeSelect(node.id)}
          >
            <Checkbox checked={selectedNodeId === node.id} />
            <span className="tree-node-name">{node.name}</span>
            <span className="tree-badge">{node.count}</span>
          </div>
        ))}
      </div>
    </Card>
  )
}

export default DimensionTree
